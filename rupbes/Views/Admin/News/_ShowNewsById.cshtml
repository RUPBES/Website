@model rupbes.Models.News
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<style>
    .file-icon {
        width: 64px; /* Фиксированный размер иконки */
        height: 64px;
        margin-bottom: 8px; /* Отступ между иконкой и текстом */
    }

    .file-name {
        font-family: Arial, sans-serif;
        font-size: 0.9em;
        text-align: center;
        word-break: break-word; /* Перенос длинных слов */
        max-width: 100%; /* Ограничение ширины текста */
        color: #333;
    }
</style>
<div class="card card-warning card-outline mb-4">
    <!--begin::Header-->
    <div class="card-header">
        <div class="card-title">
            <i class="bi bi-calendar2-range"></i>@Model.date.ToShortDateString()
            &nbsp;
            <i class="fa fa-tags"></i>@Model.title_ru
        </div>
    </div>
    <!--end::Header-->
    <!--begin::Body-->
    <div class="card-body">
        <div class="g-3">
            <form id="editNews" action="/Admin/EditNews" method="post">
                <input name="id" value="@Model.id" hidden />
                <div class="row">
                    <div class="col-md-6">
                        <label for="validationCustom00" class="form-label">Категория новости</label>
                        <select class="form-select" id="validationCustom00" required="">
                            <option selected="" disabled="" value="">Выберите категорию новости</option>
                            @foreach (rupbes.Models.News_type item in ViewBag.newsType)
                            {
                                <option value="@item.id" @(item.id == Model.type_id ? "selected" : "")>@item.type</option>
                            }
                        </select>
                        <div class="invalid-feedback">Выберите категорию</div>
                    </div>
                    <!--begin::Col-->
                    <div class="col-md-12">
                        <label for="validationCustom01" class="form-label">Заголовок на русском языке</label>
                        <textarea class="form-control" id="validationCustom01" name="title_ru" rows="2" required="">@Model.title_ru</textarea>
                        <div class="invalid-feedback">Заполните название вакансии</div>
                    </div>
                    <!--end::Col-->
                    <!--begin::Col-->
                    <div class="col-md-12">
                        <label for="validationCustom02" class="form-label">Заголовок на беларусском языке</label>
                        <textarea class="form-control" id="validationCustom02" name="title_bel" rows="2" required="">@Model.title_bel</textarea>
                        <div class="invalid-feedback">Заполните название вакансии</div>
                    </div>
                    <!--end::Col-->
                    <!--begin::Col-->
                    <div class="col-md-12">
                        <label for="validationCustom03" class="form-label">Текст новости на русском языке</label>
                        <textarea class="form-control" id="validationCustom03" name="body_ru" rows="5" required="">@Model.body_ru</textarea>
                    </div>
                    <!--end::Col-->
                    <!--begin::Col-->
                    <div class="col-md-12">
                        <label for="validationCustom04" class="form-label">Текст новости на белорусском языке</label>
                        <textarea class="form-control" id="validationCustom04" name="body_bel" rows="5" required="">@Model.body_bel</textarea>
                    </div>
                    <!--end::Col-->
                    <div class="col-md-12">
                        <label class="form-label" for="inputGroupFile01">Загрузить изображение/документ</label>
                        <input type="file" class="form-control" id="inputGroupFile01">
                    </div>
                    <hr id="hrUp">
                    <label for="ImgsBlock" class="form-label">Загруженные изображения/документы</label>
                    @if (Model.Imgs.Count() > 0)
                    {
                        <div class="row g-3" id="containerFiles">
                            @foreach (var item in Model.Imgs)
                            {
                                <div class="col-md-4">
                                    <div class="custom-control custom-checkbox image-checkbox">
                                        <input type="checkbox" class="custom-control-input" id="@item.id" name="img_id" checked>
                                        <label class="custom-control-label" for="@item.id">
                                            @if (item.src_min == "document")
                                            {
                                                <img class="file-icon" src="~/Content/Images/doc_icon.jpg" alt="Document Icon" />
                                                <span class="file-name">@item.src.Substring(@item.src.LastIndexOf('/') + 1)</span> <!-- Отображаем имя файла -->
                                            }
                                            else
                                            {
                                                <img src="@item.src_min" class="rounded">
                                            }
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info" id="noFiles" role="alert">
                            Пока нет добавленных фотографий.
                        </div>
                    }
                    <hr id="hrUp">
                    <div class="button-container">
                        <button type="submit" class="btn btn-warning">Сохранить</button>
                        <button type="button" onclick="ShowDeleteMessage(@Model.id)" class="btn btn-danger">Удалить</button>
                    </div>
            </form>
        </div>
    </div>
    <!--end::Body-->
    <div class="card-footer">

    </div>
</div>

<script>
    $('#inputGroupFile01').on('change', function () {
        console.log("зашло");
        var files = $(this).prop('files'); // Получаем выбранные файлы

        if (files.length > 0) {
            if (window.FormData) {
                var data = new FormData();
                for (var i = 0; i < files.length; i++) {
                    data.append("file" + i, files[i]);
                }

                // Добавляем переменную path
                var path = 'News';
                data.append("path", path);

                $.ajax({
                    type: "POST",
                    url: '/Admin/UploadAjax',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        // Проверяем, существует ли div с id="containerFiles"
                        if ($('#containerFiles').length === 0) {
                            // Если не существует, находим div с id="noFiles"
                            var noFilesDiv = $('#noFiles');

                            // Если найден div с id="noFiles", выполняем действия
                            if (noFilesDiv.length > 0) {
                                // Добавляем новый div с классом "row g-3" и id="containerFiles" внутрь noFilesDiv
                                noFilesDiv.prepend($('<div>').addClass('row g-3').attr('id', 'containerFiles'));

                                // Удаляем div с id="noFiles"
                                noFilesDiv.remove();
                            }
                        }
                        $('#containerFiles').append(result);
                    },
                    error: function (xhr, status, p3) {
                        var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                        $('#toast-body-danger').html("Произошла ошибка при загрузке файла.");
                        toastDanger.show();
                        console.error("Ошибка при выполнении AJAX-запроса:", p3);
                    }
                });
            }
        }
    });
</script>
<script>
    function handleInput() {
        // HTML-код, который вы хотите добавить
        var newHtml = '<hr><div class="alert alert-info" role="alert">Для сохранения данных нажмите на кнопку "Сохранить".</div>';

        // Добавление HTML выше элемента с id hrUp
        $('#hrUp').before(newHtml);

        // Удаление обработчика события после первого срабатывания
        $('input').off('input', handleInput); // Удаляем обработчик события
    }

    // Назначение обработчика события на input
    $('input').on('input', handleInput);

    $('#editNews').on('submit', function (event) {
        event.preventDefault(); // Отменяем стандартное поведение отправки формы

        // Собираем данные формы в объект
        var formData = $(this).serialize();

        // Отправляем данные через AJAX
        $.ajax({
            type: "POST",
            url: $(this).attr('action'), // URL для отправки данных
            data: formData,
            dataType: "json", // Указываем, что ожидаем JSON-ответ
            success: function (response) {
                if (response.success) {
                    // Показ сообщения об успехе
                    var toastWarning = new bootstrap.Toast(document.getElementById('toastWarning'));
                    $('#toast-body-warning').html(response.message); // Используем .html() для обновления содержимого
                    toastWarning.show();
                    // Перезагрузка страницы через 3 секунды (3000 миллисекунд)
                    setTimeout(function () {
                        location.reload(); // Перезагрузка страницы
                    }, 3000);
                }
            },
            error: function (xhr, status, error) {
                var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                $('#toast-body-danger').newHtml("Произошла ошибка при редактировании вакансии.")
                toastDanger.show();
                console.error("Ошибка при выполнении AJAX-запроса:", error);
            }
        });
    });

    function ShowDeleteMessage(id) {
        // Создаем элемент alert
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-danger';
        alertDiv.innerHTML = `
         <strong>Внимание!</strong> Вы уверены, что хотите удалить этот элемент?
          <div class="button-container">
             <button class="btn btn-danger" id="confirmDelete" >Да</button>
             <button class="btn btn-light" id="cancelDelete" >Нет</button>
           </div>`;

        // Находим элемент с id hrUp
        const hrUpElement = document.getElementById('hrUp');

        // Вставляем alert перед элементом hrUp
        hrUpElement.parentNode.insertBefore(alertDiv, hrUpElement);

        // Обработчик для кнопки "Да"
        document.getElementById('confirmDelete').onclick = function () {
            alertDiv.remove(); // Удаляем alert после подтверждения
            $.ajax({
                type: "POST",
                url: "/Admin/DeleteNews",
                data: { id: id },
                dataType: "json", // Указываем, что ожидаем JSON-ответ
                success: function (response) {
                    if (response.success) {
                        // Показ сообщения об успехе
                        var toastWarning = new bootstrap.Toast(document.getElementById('toastWarning'));
                        $('#toast-body-warning').html(response.message); // Используем .html() для обновления содержимого
                        toastWarning.show();
                        // Перезагрузка страницы через 3 секунды (3000 миллисекунд)
                        setTimeout(function () {
                            location.reload(); // Перезагрузка страницы
                        }, 3000);
                    }
                },
                error: function (xhr, status, error) {
                    var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                    $('#toast-body-danger').html("Произошла ошибка при удалении вакансии.")
                    toastDanger.show();
                    console.error("Ошибка при выполнении AJAX-запроса:", error);
                }
            });
        };

        // Обработчик для кнопки "Нет"
        document.getElementById('cancelDelete').onclick = function () {
            // Назначение обработчика события на input
            $('input').on('input', handleInput);
            alertDiv.remove(); // Удаляем alert при отказе
        };
    }
</script>