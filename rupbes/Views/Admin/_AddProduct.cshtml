@using rupbes.Models.ViewModels
@using rupbes.Models.Products
@model ProductViewModel

@{
    ViewBag.Title = "Добавить продукцию собственного производства";
}
<style>
    .form-block {
        min-width: 60vw;
        max-width: 90vw;
        width: auto;
    }
    .product-info-grid, .product-info-grid-v2 {
        flex: 1 1 200px; /* Элементы будут занимать равное пространство */
        min-width: 200px; /* Устанавливает минимальную ширину */
    }
    .admin-imgs {
        max-width: 100%;
    }

    .select2-container {
        max-width: 85vw !important;        
    }    
</style>

<section class="form-block">
    <h2>Добавить товар</h2>
    <div class="AddProductWindow">
        <form id="myForm" action="/Admin/CreateProduct" method="post">
            <input name="DepartmentId" value="@Model.DepartmentId" readonly style="display: none" />
            <div class="window-label">
                <select required id="GroupProduct" name="groupProduct" style="width: 50%">
                    @foreach (GroupProduct group in ViewBag.groups)
                    {
                        <option>@group.name</option>
                    }
                </select>
            </div>
            <div id="divSubGroupProduct" class="window-label">

            </div>
            <div class="window-label">
                <input required class="text-box single-line" placeholder="Название"
                       value="@Model.name" name="name" />
            </div>
            <div class="window-label">
                <input required class="text-box single-line" placeholder="Код ТН ВЭД"
                       value="@Model.codeTNVD" name="codeTNVD" />
            </div>
            <select id="Unit" name="UnitId" style="width: 50%">
                @foreach (Unit item in ViewBag.units)
                {
                    if (item.name == "Штука")
                    {
                        <option selected value="@item.Id">@item.name</option>
                    }
                    else
                    {
                        <option value="@item.Id">@item.name</option>
                    }
                }
            </select>
            <div class="window-label">
                <input class="text-box single-line" placeholder="Примечание"
                       value="@Model.note" name="note" />
            </div>
            <div class="section-property">
                <div id="prop">
                    <button id="addPropertyBtn" onclick="AddPropertySelectGroup()" type="button" class="button">Добавить характеристику</button>
                </div>
            </div>
            <div class="section-property">
                <div id="component">
                    <button id="addComponentBtn" onclick="AddComponent()" type="button" class="button">Добавить компонент</button>
                </div>
            </div>
            <div class="window-label">
                <label>
                    Прикрепить фото товара
                </label>
            </div>
            <div class="admin-upfile">
                <input class="upload-img" type="file" name="upload" id="uploadFile">
                <button id="clickbutton" class="upfile-btn">Загрузить файл</button>
            </div>
            <div class="admin-imgs">
            </div>

            <div class="window-label">
                <button type="submit" id="AddButton" class="button button-color-back-forestgreen button-color-white text-big">Добавить</button>
            </div>
        </form>
    </div>
</section>
<script>
    var count = 0;
    var countComp = 0;
    $('#GroupProduct').select2({
        placeholder: 'Группа товара',
        tags: true
    });
    $('#Unit').select2({
        placeholder: 'Единица измерения'
    });
    $('#Property').select2({
        placeholder: 'Характеристика',
        tags: true
    });
    $('#GroupProduct').on('select2:select', function (e) {
        var name = e.params.data.text;
         $.ajax({
             type: "get",
             url: '@Url.Action("ShowSubGroupSelect", "Admin")',
             data: { name: name },
             success: function (data) {
                 $('#divSubGroupProduct').html(data);
             }
         })
    });

    function showSubGroupSelect(name) {
        $.ajax({
            type: "get",
            url: '@Url.Action("ShowSubGroupSelect", "Admin")',
            data: { name: name },
            success: function (data) {
                $('#divSubGroupProduct').html(data);
            }
        })
    }

    function AddPropertySelectGroup() {
        var button = document.getElementById('addPropertyBtn');        
        $.ajax({
            type: "get",
            url: '@Url.Action("AddPropertySelectGroup", "Admin")',
            data: { count: count },
            success: function (data) {
                $('#prop').before(data);
                count = count + 1;
            }
        })
        button.disabled = true;    
        // Разблокируем кнопку через 3 секунды
        setTimeout(() => {
            button.disabled = false;
        }, 3000);
    }

    function AddComponent() {
        var button = document.getElementById('addComponentBtn');      
         $.ajax({
             type: "get",
             url: '@Url.Action("AddComponent", "Admin")',
             data: { count: countComp },
             success: function (data) {
                 $('#component').before(data);
                 countComp = countComp + 1;
             }
         })
        button.disabled = true;     
        // Разблокируем кнопку через 3 секунды
        setTimeout(() => {
            button.disabled = false;
        }, 3000);
    }

    showSubGroupSelect($('#GroupProduct').select2('data')[0].text);

    $('#clickbutton').on('click', function (event) {
     event.preventDefault();
     var files = document.getElementById('uploadFile').files;
     if (files.length > 0) {
         if (window.FormData !== undefined) {
             var data = new FormData();
             for (var i = 0; i < files.length; i++) {
                 data.append("file" + i, files[i]);
             }

             $.ajax({
                 type: "POST",
                 url: '@Url.Action("UploadAjax","Admin")',
                 contentType: false,
                 processData: false,
                 data: data,
                 success: function (result) {
                     $('.admin-imgs').append(result);
                 },
                 error: function (xhr, status, p3) {
                     alert(xhr.responseText);
                 }
             });
         } else {
             alert("Ваш браузер не поддерживает Html5!");
         }
     }
    });

    $('#myForm').submit(function (event) {
        event.preventDefault();
        var button = $('#AddButton');
        button.prop('disabled', true).text('Подождите...'); // Меняем текст
        $('#myForm').off('submit').submit();

        setTimeout(function () {
            button.prop('disabled', false).text('Добавить'); // Возвращаем текст
        }, 5000);
    });

    var deleteIcons = document.querySelectorAll('.delete-icon');

    // Добавляем обработчик события для каждой иконки
    deleteIcons.forEach(icon => {
        icon.addEventListener('click', function () {
            // Удаляем родительский элемент (весь блок)
            this.parentElement.remove();
            updateItemIds()
        });
    });

    function updateItemIds() {
        var index = 0;
        // Перебираем все элементы списка
        $('[id^="Property"]').each(function (index) {
            console.log("Edit");
            var parent = $(this).parent().parent();
            var inputElement = parent.find('input');
            // Обновляем ID каждого элемента
            $(this).attr('id', 'Property' + (index));
            $(this).attr('name', 'properties[' + (index) + '].name');
            inputElement.attr('name', 'properties[' + (index) + '].value');
            console.log($(this));
            console.log(inputElement);
            index = index + 1;
        });
    }
</script>