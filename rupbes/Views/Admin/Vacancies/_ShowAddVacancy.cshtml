@model int

<div id="vacancy" class="card card-success card-outline mb-4">
    <div class="card-header">
        <div class="card-title">Добавить вакансию</div>
    </div>
    <div class="card-body">
        <div class="g-3">
            <form id="addVacancy" action="/Admin/AddVacancy" method="post">
                <input name="id_dep" value="@Model" hidden />
                <div class="row">
                    <!--begin::Col-->
                    <div class="col-md-6">
                        <label for="validationCustom01" class="form-label">Название вакансии на русском языке</label>
                        <input type="text" class="form-control" id="validationCustom01" required="" name="vacancy_ru">
                        <div class="invalid-feedback">Заполните название вакансии</div>
                    </div>
                    <!--end::Col-->
                    <!--begin::Col-->
                    <div class="col-md-6">
                        <label for="validationCustom02" class="form-label">Название вакансии на беларусском языке</label>
                        <input type="text" class="form-control" id="validationCustom02" required="" name="vacancy_bel">
                        <div class="invalid-feedback">Заполните название вакансии</div>
                    </div>
                    <!--end::Col-->
                </div>
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom03" class="form-label">Требование к вакансии на русском языке</label>
                    <textarea class="form-control" id="validationCustom03" name="requirement_ru" rows="2"></textarea>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom04" class="form-label">Требование к вакансии на белорусском языке</label>
                    <textarea class="form-control" id="validationCustom04" name="requirement_bel" rows="2"></textarea>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom05" class="form-label">Заработная плата</label>
                    <input type="text" class="form-control" id="validationCustom05" required="" name="payment">
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom06" class="form-label">Ссылка на биржу труда</label>
                    <input type="text" class="form-control" id="validationCustom06" required="" name="link">
                </div>
                <!--end::Col-->
                <hr id="hrUp">
                <div class="button-container">
                    <button type="submit" class="btn btn-success">Сохранить</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $('input').on('input', function () {
        // HTML-код, который вы хотите добавить
        var newHtml = '<hr><div class="alert alert-info" role="alert">Для добавления вакансии нажмите на кнопку "Сохранить".</div>';

        // Добавление HTML выше элемента с id hrUp
        $('#hrUp').before(newHtml);

        // Удаление обработчика события после первого срабатывания
        $('input').off('input'); // Удаляем обработчик события
    });

    $('#addVacancy').on('submit', function (event) {
        event.preventDefault(); // Отменяем стандартное поведение отправки формы

        // Собираем данные формы в объект
        var formData = $(this).serialize();

        // Отправляем данные через AJAX
        $.ajax({
            type: "POST",
            url: $(this).attr('action'), // URL для отправки данных
            data: formData,
            dataType: "json", // Указываем, что ожидаем JSON-ответ
            success: function (response) {
                if (response.success) {
                    // Дополнительные действия, например, сброс формы или обновление списка вакансий
                    $('#addVacancy')[0].reset(); // Сбрасываем форму

                    // Показ сообщения об успехе
                    var toastSuccess = new bootstrap.Toast(document.getElementById('toastSuccess'));
                    $('#toast-body-success').html(response.message); // Используем .html() для обновления содержимого
                    toastSuccess.show();
                    // Перезагрузка страницы через 3 секунды (3000 миллисекунд)
                    setTimeout(function () {
                        location.reload(); // Перезагрузка страницы
                    }, 3000);
                }
                else {
                    var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                    $('#toast-body-danger').html("Произошла ошибка при добавлении вакансии.")
                    toastDanger.show();
                    console.error("Ошибка при выполнении AJAX-запроса:", response.message);
                }
            },
            error: function (xhr, status, error) {
                var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                $('#toast-body-danger').html("Произошла ошибка при добавлении вакансии.")
                toastDanger.show();
                console.error("Ошибка при выполнении AJAX-запроса:", error);
            }
        });
    });
</script>