@using rupbes.Models
@model Bosses

<div id="boss" class="card card-warning card-outline mb-4">
    <div class="card-header">
        <div class="card-title">Руководитель</div>
    </div>
    <div class="card-body">
        <div class="g-3">
            <form id="editBoss" action="/Admin/EditBoss" method="post">
                <input name="id" value="@Model.id" hidden />
                <input name="id_dep" value="@Model.id_dep" hidden />
                <!--Фио-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom01" class="form-label">ФИО на русском языке</label>
                    <input type="text" class="form-control" id="validationCustom01" value="@Model.name" required="" name="name">
                    <div class="invalid-feedback">Заполните ФИО</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom02" class="form-label">ФИО на беларусском языке</label>
                    <input type="text" class="form-control" id="validationCustom02" value="@Model.name_bel" required="" name="name_bel">
                    <div class="invalid-feedback">Заполните ФИО</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom03" class="form-label">ФИО на английском языке</label>
                    <input type="text" class="form-control" id="validationCustom03" value="@Model.name_eng" required="" name="name_eng">
                    <div class="invalid-feedback">Заполните ФИО</div>
                </div>
                <!--end::Col-->
                <!--Должность-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom04" class="form-label">Занимаемая должность на русском языке</label>
                    <input type="text" class="form-control" id="validationCustom04" value="@Model.post" required="" name="post">
                    <div class="invalid-feedback">Заполните должность</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom05" class="form-label">Занимаемая должность на беларусском языке</label>
                    <input type="text" class="form-control" id="validationCustom05" value="@Model.post_bel" required="" name="post_bel">
                    <div class="invalid-feedback">Заполните должность</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom06" class="form-label">Занимаемая должность на английском языке</label>
                    <input type="text" class="form-control" id="validationCustom06" value="@Model.post_eng" required="" name="post_eng">
                    <div class="invalid-feedback">Заполните должность</div>
                </div>
                <!--end::Col-->
                <!--Описание обязанностоей-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom07" class="form-label">Описание обязанностей на русском языке</label>
                    <textarea class="form-control" id="validationCustom07" required="" name="desc" rows="8">@Model.desc</textarea>
                    <div class="invalid-feedback">Заполните описание обязанностей</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom08" class="form-label">Описание обязанностей на белорусском языке</label>
                    <textarea class="form-control" id="validationCustom08" required="" name="desc_bel" rows="8">@Model.desc_bel</textarea>
                    <div class="invalid-feedback">Заполните описание обязанностей</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom09" class="form-label">Описание обязанностей на английском языке</label>
                    <textarea class="form-control" id="validationCustom09" required="" name="desc_eng" rows="8">@Model.desc_eng</textarea>
                    <div class="invalid-feedback">Заполните описание обязанностей</div>
                </div>
                <!--end::Col-->
                <!--День для встречи-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom10" class="form-label">День для встречи на русском языке</label>
                    <input type="text" class="form-control" id="validationCustom10" value="@Model.meet_day" required="" name="meet_day">
                    <div class="invalid-feedback">Заполните день для встречи</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom11" class="form-label">День для встречи на беларусском языке</label>
                    <input type="text" class="form-control" id="validationCustom11" value="@Model.meet_day_bel" required="" name="meet_day_bel">
                    <div class="invalid-feedback">Заполните день для встречи</div>
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom12" class="form-label">День для встречи на английском языке</label>
                    <input type="text" class="form-control" id="validationCustom12" value="@Model.meet_day_eng" required="" name="meet_day_eng">
                    <div class="invalid-feedback">Заполните день для встречи</div>
                </div>
                <!--end::Col-->
                <!--Время для встречи-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom13" class="form-label">Время для встречи</label>
                    <input type="text" class="form-control" id="validationCustom12" value="@Model.meet_time" required="" name="meet_time">
                    <div class="invalid-feedback">Заполните день для встречи</div>
                </div>
                <!--end::Col-->
                <!--Телефон-->
                <!--begin::Col-->
                <div class="col-md-12">
                    <label for="validationCustom14" class="form-label">Телефон для связи</label>
                    <input type="text" class="form-control" id="validationCustom12" value="@Model.phone" required="" name="phone">
                    <div class="invalid-feedback">Заполните телефон</div>
                </div>
                <!--end::Col-->
                <!--Фотографии-->
                <div class="col-md-12">
                    <label class="form-label" for="inputGroupFile01">Загрузить изображение</label>
                    <input type="file" class="form-control" id="inputGroupFile01">
                </div>
                <div id="loadingSpinner" style="text-align: center;">
                    <div class="spinner-border text-info" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <hr>
                <label for="ImgsBlock" class="form-label">Загруженное изображение</label>
                @if (Model.Imgs != null)
                {
                    <div class="row g-3" id="containerFiles">
                        <div class="col-md-4">
                            <div class="custom-control custom-checkbox image-checkbox">
                                <input type="checkbox" class="custom-control-input" id="@Model.Imgs.id" name="img_ids" value="@Model.Imgs.id" checked>
                                <label class="custom-control-label" for="@Model.Imgs.id">
                                    <img src="@Model.Imgs.src_min" class="rounded">
                                </label>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-info" id="noFiles" role="alert">
                        Пока нет добавленного изображения.
                    </div>
                }
                <div id="messageContainer"></div>
                <hr id="hrUp">
                <div class="button-container">
                    <button type="submit" class="btn btn-warning">Сохранить</button>
                    <button type="button" onclick="ShowDeleteMessage(@Model.id)" class="btn btn-danger">Удалить</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    $('#loadingSpinner').hide();
    $('#inputGroupFile01').on('change', function () {
        // Показываем значок загрузки
        $('#loadingSpinner').show();

        // Блокируем input
        $('#inputGroupFile01').prop('disabled', true);

        var files = $(this).prop('files'); // Получаем выбранные файлы

        if (files.length > 0) {
            if (window.FormData) {
                var data = new FormData();
                for (var i = 0; i < files.length; i++) {
                    data.append("file" + i, files[i]);
                }

                // Добавляем переменную path
                var path = 'Boss';
                data.append("path", path);

                $.ajax({
                    type: "POST",
                    url: '/Admin/UploadAjax',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (result) {
                        // Проверяем, существует ли div с id="containerFiles"
                        if ($('#containerFiles').length === 0) {
                            // Если не существует, находим div с id="noFiles"
                            var noFilesDiv = $('#noFiles');

                            // Если найден div с id="noFiles", выполняем действия
                            if (noFilesDiv.length > 0) {
                                // Добавляем новый div с классом "row g-3" и id="containerFiles" внутрь noFilesDiv
                                noFilesDiv.before($('<div>').addClass('row g-3').attr('id', 'containerFiles'));

                                // Удаляем div с id="noFiles"
                                noFilesDiv.remove();
                            }
                        }
                        $('#containerFiles').html(result);
                    },
                    error: function (xhr, status, p3) {
                        var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                        $('#toast-body-danger').html("Произошла ошибка при загрузке файла.");
                        toastDanger.show();
                        console.error("Ошибка при выполнении AJAX-запроса:", p3);
                    },
                    complete: function () {
                        // Скрываем значок загрузки
                        $('#loadingSpinner').hide();
                        // Разблокируем input
                        $('#inputGroupFile01').prop('disabled', false);
                    }
                });
            }
        }
    });
</script>
<script>
    // Находим контейнер с id=messageContainer
    var messageContainer = document.getElementById('messageContainer');

    function handleInput() {
        // HTML-код, который вы хотите добавить
        var newHtml = '<hr><div class="alert alert-warning" role="alert">Для сохранения данных нажмите на кнопку "Сохранить".</div>';

        // Заменяем содержимое messageContainer на alertDiv
        messageContainer.innerHTML = newHtml;

        // Удаление обработчика события после первого срабатывания
        $('input').off('input', handleInput); // Удаляем обработчик события
        $('textarea').off('input', handleInput); // Удаляем обработчик события
    }

    // Назначение обработчика события на input
    $('input').on('input', handleInput);
    $('textarea').on('input', handleInput);

    $('#editBoss').on('submit', function (event) {
        event.preventDefault(); // Отменяем стандартное поведение отправки формы

        // Собираем данные формы в объект
        var formData = $(this).serialize();

        // Отправляем данные через AJAX
        $.ajax({
            type: "POST",
            url: $(this).attr('action'), // URL для отправки данных
            data: formData,
            dataType: "json", // Указываем, что ожидаем JSON-ответ
            success: function (response) {
                if (response.success) {
                    // Показ сообщения об успехе
                    var toastWarning = new bootstrap.Toast(document.getElementById('toastWarning'));
                    $('#toast-body-warning').html(response.message); // Используем .html() для обновления содержимого
                    toastWarning.show();
                    // Перезагрузка страницы через 3 секунды (3000 миллисекунд)
                    setTimeout(function () {
                        location.reload(); // Перезагрузка страницы
                    }, 3000);
                }
                else {
                    var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                    $('#toast-body-danger').html("Произошла ошибка при редактировании руководителя: ", response.message)
                    toastDanger.show();
                    console.error("Ошибка при выполнении AJAX-запроса:", response.message);
                }
            },
            error: function (xhr, status, error) {
                var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                $('#toast-body-danger').html("Произошла ошибка при редактировании руководителя.")
                toastDanger.show();
                console.error("Ошибка при выполнении AJAX-запроса:", error);                
            }
        });
    });

    function ShowDeleteMessage(id) {
        // Создаем элемент alert
        var alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-danger';
        alertDiv.innerHTML = `
            <strong>Внимание!</strong> Вы уверены, что хотите удалить этот элемент?
             <div class="button-container">
                <button type="button" class="btn btn-danger" id="confirmDelete" >Да</button>
                <button type="button" class="btn btn-light" id="cancelDelete" >Нет</button>
              </div>
        `;

        // Заменяем содержимое messageContainer на alertDiv
        messageContainer.innerHTML = alertDiv.outerHTML;

        // Обработчик для кнопки "Да"
        document.getElementById('confirmDelete').onclick = function () {
            // Очищаем содержимое messageContainer
            messageContainer.innerHTML = '';
            $.ajax({
                type: "POST",
                url: "/Admin/DeleteBoss",
                data: { id: id },
                dataType: "json", // Указываем, что ожидаем JSON-ответ
                success: function (response) {
                    if (response.success) {
                        // Показ сообщения об успехе
                        var toastWarning = new bootstrap.Toast(document.getElementById('toastWarning'));
                        $('#toast-body-warning').html(response.message); // Используем .html() для обновления содержимого
                        toastWarning.show();
                        // Перезагрузка страницы через 3 секунды (3000 миллисекунд)
                        setTimeout(function () {
                            location.reload(); // Перезагрузка страницы
                        }, 3000);
                    }
                    else {
                        var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                        $('#toast-body-danger').html("Произошла ошибка при удалении руководителя.")
                        toastDanger.show();
                        console.error("Ошибка при выполнении AJAX-запроса:", response.message);
                    }
                },
                error: function (xhr, status, error) {
                    var toastDanger = new bootstrap.Toast(document.getElementById('toastDanger'));
                    $('#toast-body-danger').html("Произошла ошибка при удалении руководителя.")
                    toastDanger.show();
                    console.error("Ошибка при выполнении AJAX-запроса:", error);
                }
            });
        };

        // Обработчик для кнопки "Нет"
        document.getElementById('cancelDelete').onclick = function () {
            // Назначение обработчика события на input
            $('input').on('input', handleInput);
            $('textarea').on('input', handleInput);
            // Очищаем содержимое messageContainer
            messageContainer.innerHTML = '';
        };
    }
</script>